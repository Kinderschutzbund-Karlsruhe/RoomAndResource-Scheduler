@model Event
@{
    ViewData["Title"] = "Home Page";
    User organizer = Model.Organizer;


    User user = new User();
    if (Context.Items.ContainsKey("User"))
    {
        user = Context.Items["User"] as User;
    }
}

<script>
$(document).ready(function() {
    var qrcode = new QRCode("qrcode");
    let eventId = @Model.Id;

    window.icsUrl = window.location.origin + "/Files/Event/" + eventId + "/Ics/" + encodeURIComponent($.cookie('AuthKey'));
    qrcode.makeCode(window.icsUrl);

    $(".knob").knob();
});


function doJoin(join){  
    let url = join ? "/Proxy?Api=/Event/@(Model.Id)/Join" : "/Proxy?Api=/Event/@(Model.Id)/Unjoin";
    
    $("#contentBox").loading('start');
    $.ajax({
        url: url,
        type:"PUT",
        success: function(res){
            location.reload(); 
        },
        error: function(e){
             $("#contentBox").loading('stop');

            notify({
               type: "error", //alert | success | error | warning | info
               title: "@Localizer["Error"]",
               message: "<p localize-content>@Localizer["Unexpected error"]</p>",
               position: {
                   x: "right",
                   y: "top"
               },
               autoHide: true,
               delay: 4000
            });
        }
    });
}

function deleteEvent() {
    if (confirm("@Localizer["You are something to erase"]") == true) {
       $.ajax({
            url:"/Proxy?Api=/Event/@Model.Id",
            type:"Delete",
            success: function(res){
                notify({
                    type: "success", //alert | success | error | warning | info
                    title: "@Localizer["Deleted"]",
                    message: "<p>@Localizer["Changes saved"]</p>",
                    position: {
                        x: "right",
                        y: "top"
                    },
                    autoHide: true,
                    delay: 4000
                });
                setTimeout(function(){
                    window.location = "/Resource/@Model.RoomId";
                }, 4000);
            },
            error: function(e){
                $("#form").loading('stop');

                let errTxt = "@Localizer["API connection failed"]";
        
                notify({
                    type: "error", //alert | success | error | warning | info
                    title: "@Localizer["Error"]",
                    message: "<p localize-content>"+errTxt+"</p>",
                    position: {
                        x: "right",
                        y: "top"
                    },
                    autoHide: true,
                    delay: 4000
                });
            }
        });
    }
}
</script>

<div class="container px-4 px-lg-5">

    <div class="row my-5" id="contentBox">
        <div class="col-md-8">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab" aria-controls="description" aria-selected="true" localize-content>Description</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="dates-tab" data-bs-toggle="tab" data-bs-target="#dates" type="button" role="tab" aria-controls="dates" aria-selected="false" localize-content>Dates</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="questions-tab" data-bs-toggle="tab" data-bs-target="#questions" type="button" role="tab" aria-controls="dates" aria-selected="false" localize-content>Questions</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="visitors-tab" data-bs-toggle="tab" data-bs-target="#visitors" type="button" role="tab" aria-controls="visitors" aria-selected="false" localize-content>Visitors</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="organizer-tab" data-bs-toggle="tab" data-bs-target="#organizer" type="button" role="tab" aria-controls="contact" aria-selected="false" localize-content>Organizer</button>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade m-3 show active" id="description" role="tabpanel" aria-labelledby="description-tab">
                    @Html.Raw(Model.Description)
                   </div>
                <div class="tab-pane fade m-3" id="dates" role="tabpanel" aria-labelledby="dates-tab">
                    @foreach(var d in Model.Schedule)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col">
                                        <b localize-content>From:</b> @d.From.ToString("g")
                                    </div>
                                    <div class="col">
                                        <b localize-content>To:</b> @d.To.ToString("g")
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="tab-pane fade m-3" id="questions" role="tabpanel" aria-labelledby="questions-tab">
                    <center localize-content>No questions found</center>
                </div>
                <div class="tab-pane fade m-3" id="visitors" role="tabpanel" aria-labelledby="visitors-tab">
                    @foreach(var visitor in Model.Visitors)
                    {
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-1">
                                        <img class="rounded-circle" src="@visitor.Avatar" style="height:40px">
                                    </div>
                                    <div class="col-7">
                                        @visitor.Name @visitor.Surname
                                    </div>
                                    <div class="col-4">
                                        @if (organizer.Id == user.Id)
                                        {
                                            <a href="mailto:@visitor.Mail" target="_blank" class="btn btn-primary float-right" localize-content>Send mail</a>
                                            <a href="#" target="_blank" class="btn btn-danger float-right" localize-content>Unjoin</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    @if(Model.Visitors.Count == 0)
                    {
                        <center localize-content>No visitors joined</center>
                    }
                </div>
                <div class="tab-pane fade m-3" id="organizer" role="tabpanel" aria-labelledby="organizer-tab">
                    <div class="row my-5">
                        <div class="col-md-4">
                            <img class="w-100" src="@organizer.Avatar" alt=""/>
                        </div>
                        <div class="col-md-4">
                            <b localize-content>Name</b><br />
                            @organizer.Name @organizer.Surname<br/>
                            <br/>
                            <b localize-content>Mail</b><br />
                            <a href="mailto:@organizer.Mail">@organizer.Mail</a><br/>
                        </div>
                        <div class="col-md-3 text-center">
                            @{
                                var totalEvents = organizer.OrganizedEventWithSchedule.Count;
                                var eventsInTime = organizer.OrganizedEventWithSchedule.Count(o => o.Schedule.IsExecutedOnTime);
                                var reliabilityScore = 100;
                                if (totalEvents > 0)
                                {
                                    reliabilityScore = (int)Math.Ceiling(100.0 / totalEvents * eventsInTime);
                                }

                                var reliabilityScoreColor = "#157347";

                                if (reliabilityScore <= 80)
                                {
                                    reliabilityScoreColor = "#ffc107";
                                }
                                if (reliabilityScore <= 50)
                                {
                                    reliabilityScoreColor = "#dc3545";
                                }
                            }
                            <input type="text"
                                   class="knob"
                                   value="@reliabilityScore"
                                   data-min="0"
                                   data-max="100"
                                   data-width="100"
                                   data-height="100"
                                   data-fgColor="@reliabilityScoreColor"
                                   readonly><br/>
                            <small localize-content>Reliability</small>
                        </div>
                    </div>
                    <div class="row my-5">
                        @{
                            await Html.RenderPartialAsync("_EventWithScheduleList", organizer.OrganizedEventWithSchedule);
                        }
                    </div>
                </div>
            </div>
         </div>
         <div class="col-md-4">
            <div class="card text-white bg-secondary"> 
                <img src="@Model.Image" alt="" class="w-100"/>
                <div class="card-body">
                    <h2>@Model.Name</h2>
                    @if (organizer.Id == user.Id || user.Role == UserRole.Admin)
                    {
                        <a class="btn btn-primary w-100 mb-2" href="/Event/@Model.Id/Edit" localize-content>Edit</a>
                        <button onClick="deleteEvent();" class="btn btn-danger w-100" localize-content>Delete</button>
                    }
                    else
                    {
                        if (Model.Visitors.Select(e => e.Id).Contains(user.Id))
                        {
                            <button class="btn btn-danger w-100" onClick="doJoin(false)" localize-content>Unjoin</button>
                        }
                        else if(Model.Visitors.Count < Model.MaxVisitorCount)
                        {
                            <button class="btn btn-primary w-100" onClick="doJoin(true)" localize-content>Join</button>
                        }
                    }
                    <hr/>
                    @(@Model.MaxVisitorCount - @Model.Visitors.Count) <i localize-content>Free places</i>
                    <hr/>
                    @Model.Schedule.Count <i localize-content>Dates</i>
                    <hr/>
                    @Model.Room.Name
                    <hr/>
                    <center>
                        <div id="qrcode" class="w-100" onclick="window.location = window.icsUrl;"></div>
                    </center>
                    <hr/>
                    @foreach(string tag in Model.Tags)
                    {
                        <span class="badge text-black bg-light">@tag</span>
                    }
               </div>
            </div>  
         </div>
      
    </div>
</div>