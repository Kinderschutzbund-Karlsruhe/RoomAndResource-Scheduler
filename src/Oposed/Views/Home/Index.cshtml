@model List<Resource>
@{
    ViewData["Title"] = "Home Page";


    int MAX_DESCRIPTION_LENGTH = 100;
    User user = new User();
    if (Context.Items.ContainsKey("User"))
    {
        user = Context.Items["User"] as User;
    }

    string GetDescription(string description)
    {
        if (description == null)
        {
            return "";
        }
        if (description.Length > MAX_DESCRIPTION_LENGTH)
        {
            return description.Substring(0, MAX_DESCRIPTION_LENGTH);
        }
        return description;
    }
}

<script>
$(document).ready(function() {
    $("*[resourceId]").each(function() {
        let me = $(this);
        let resourceId = me.attr("resourceId");

        $.ajax({
            url:"/Proxy?Api=/Event/Resource/"+resourceId+"/Next",
            type:"GET",
            success: function(res){
                if(res == ""){
                    me.html("<b class='text-success'>Derzeit frei</b>");
                }else{
                    let scheduleList = JSON.parse(res).schedule;

                    scheduleList.sort(function(a, b) { 
                        return new Date(a.from).getTime() - new Date(b.from).getTime();
                    });

                    let schedule = scheduleList[0];
                    let now = new Date(Date.now());
                    let from = new Date(schedule.from);
                    let to = new Date(schedule.to);

                    if(now < to && from < now){
                        var time = to.toLocaleTimeString();

                        if(now.getFullYear() == to.getFullYear() && now.getMonth() == to.getMonth() && now.getDate() == to.getDate()){
                            me.html("<b class='text-danger'>@Localizer["Currently occupied"]</b><br/><small>@Localizer["Until #0#"]</small>".format(time));
                        }else{
                            var date = to.toLocaleDateString();
                            me.html("<b class='text-danger'>@Localizer["Currently occupied"]</b><br/><small>@Localizer["Until #0# at #1#"]</small>".format(date, time));
                        }
                    }else if(from > now){
                        var time = to.toLocaleTimeString();

                        if(now.getFullYear() == from.getFullYear() && now.getMonth() == from.getMonth() && now.getDate() == from.getDate()){
                            me.html("<b class='text-success'>@Localizer["Currently free"]</b><br/><small>@Localizer["Until #0#"]</small>".format(time));
                        }else{
                            var date = to.toLocaleDateString();
                            me.html("<b class='text-success'>@Localizer["Currently free"]</b><br/><small>@Localizer["Until #0# at #1#"]</small>".format(date, time));
                        }
                    }else{
                        me.html("<b class='text-success'>@Localizer["Currently free"]</b>");
                    }
                }
            },
            statusCode: {
                400: function(e) {
                    if(JSON.parse(e.responseText).errorId === 400){
                        me.html("<b class='text-success'>@Localizer["Currently free"]</b>");
                    }
                }
            }
        });
    });
});
</script>

<div class="container px-4 px-lg-5">
    <!-- Rooms -->
    <div class="card text-white bg-secondary my-5 text-center">
        <div class="card-body"><p class="text-white m-0" localize-content>Rooms</p></div>
    </div>
    @if (user.Role == Oposed.Enum.UserRole.Admin || Model.Any(e => e.Type == Oposed.Enum.ResourceType.Room))
    {
        <div class="row gx-4 gx-lg-5">
            @foreach (Resource room in Model.FindAll(e => e.Type == Oposed.Enum.ResourceType.Room).OrderBy(o => o.Name).ToList())
            {
                <div class="col-md-4 mb-5">
                    <div class="card h-100" onClick="window.location = '/Resource/@room.Id'">
                        <div class="overflow-hidden" style="height:200px;" >
                            <img class="card-img-top" src="@room.Image" alt="@room.Name">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@room.Name</h5>
                            <p class="card-text">@GetDescription(room.Description)</p>
                            <div resourceId="@room.Id" style="height:55px;"></div>
                        </div>
                    </div>
                </div>
            }
            @if (user.Role == Oposed.Enum.UserRole.Admin)
            {
                <div class="col-md-4 mb-5">
                    <div class="card d-flex h-100" onClick="window.location = '/Resource/New?Type=Room'">
                        <div class="text-center" style="margin-top: auto; margin-bottom: auto;">
                            <h5 class="card-title" localize-content>Add new Room</h5>
                            <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                            </svg>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <center localize-content>No Rooms fount</center>    
    }
    @if (user.Role == Oposed.Enum.UserRole.Admin || Model.Any(e => e.Type == Oposed.Enum.ResourceType.Device))
    {
        <!-- Devives -->
        <div class="card text-white bg-secondary my-5 text-center">
            <div class="card-body"><p class="text-white m-0" localize-content>Devices</p></div>
        </div>
        <div class="row gx-4 gx-lg-5">
            @foreach (Resource device in Model.FindAll(e => e.Type == Oposed.Enum.ResourceType.Device).OrderBy(o => o.Name).ToList())
            {
                <div class="col-md-4 mb-5">
                    <div class="card h-100" onClick="window.location = '/Resource/@device.Id'">
                        <div class="overflow-hidden" style="height:200px;" >
                            <img class="card-img-top" src="@device.Image" alt="@device.Name">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@device.Name</h5>
                            <p class="card-text">@GetDescription(device.Description)</p>
                            <div resourceId="@device.Id" style="height:55px;"></div>
                        </div>
                    </div>
                </div>
            }
            @if (user.Role == Oposed.Enum.UserRole.Admin)
            {
                <div class="col-md-4 mb-5">
                    <div class="card h-100" onClick="window.location = '/Resource/New?Type=Device'">
                        <div class="text-center" style="margin-top: auto; margin-bottom: auto;">
                            <h5 class="card-title" localize-content>Add new Device</h5>
                            <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                            </svg>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>